user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] $host "$request" '
                      '$status $body_bytes_sent (comp. $gzip_ratio) "Ref: $http_referer" '
                      '"$http_user_agent" "XFF: $http_x_forwarded_for" "RealIP: $realip_remote_addr"';

    access_log  /var/log/nginx/access.log  main;
    error_log /var/log/nginx/error.log;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Ensure ngx_http_realip_module is available
    set_real_ip_from 127.0.0.1/32;
    # If you are behind a NAT router, specify LAN
    #set_real_ip_from 10.24.0/16;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    gzip on;

    # configure the rest in the server sections

    server {
        listen          80 default_server;
        server_name     _;

        rewrite ^       https://$host$request_uri permanent;
    }

    # per-IP rate limiting (3 requests / second on average)
    limit_req_zone $binary_remote_addr zone=dcrdata:10m rate=3r/s;
    limit_req_log_level error;
    limit_req_status 429;

    server {
        listen       443 http2 default_server;
        server_name  _;

        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 5;
        gzip_min_length 256;
        gzip_types text/css text/* text/javascript application/x-javascript application/json
                application/xml application/atom+xml application/xaml+xml application/javascript
                application/x-font-ttf application/font-woff font/collection font/opentype
                font/otf font/ttf image/bmp image/svg+xml image/x-icon application/octet-stream;

        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; font-src 'self'; object-src 'none'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; connect-src 'self' wss://*.dcrdata.org; manifest-src 'self'" always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-XSS-Protection "1; mode=block" always;

        ssl                     on;
        ssl_certificate         /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        ssl_certificate_key     /etc/letsencrypt/live/yourdomain.com/privkey.pem;
 
        ssl_session_cache           shared:SSL:20m;
        ssl_protocols               TLSv1.2 TLSv1.3;
        ssl_ciphers                 ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        # ssl_ciphers                EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
        ssl_ecdh_curve              secp384r1;
        ssl_prefer_server_ciphers   on;
        ssl_dhparam                 /etc/nginx/dhparam.pem;
        # Be careful with Strict-Transport-Security. Be sure you know what it means.
        add_header                  Strict-Transport-Security max-age=15552001;

        # Serve static resources directly.
        location ~ ^/(css|js|images|fonts) {
                root /opt/dcrdata/public;
                # Set the Cache-Control and Expires headers for the static assets.
                expires modified 2d;
        }

        # Everything else is proxied to dcrdata.
        location / {
            # apply rate limiting
            limit_req zone=dcrdata burst=16;

            # proxy with WebSocket upgrade support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $realip_remote_addr;
            proxy_pass http://127.0.0.1:7777;
            proxy_http_version 1.1;
        }

        # set this up or just remove it
        error_page 501 502 503 504 /500.html;
        location = /500.html {
            root /var/www/html/fallback;
        }

        error_page 429 /rate_limiting.html;
        location = /rate_limiting.html {
            add_header Retry-After 30;
            root /var/www/html/fallback;
        }
    }
}
