[Application Options]

; Set the logging verbosity level.
; For all logging subsystems:
;debuglevel=debug
; Set per-subsystem:
;debuglevel=DATD=debug,SQLT=debug,MEMP=debug,RPCC=info,JAPI=debug,PSQL=debug,IAPI=debug,NTFN=debug,SKDB=debug,BLKD=debug,EXPR=debug

; Authentication information for dcrd RPC (must set, no default)
;dcrduser=duser
;dcrdpass=asdfExample

; Decred network (default is mainnet)
;testnet=1
;simnet=1

; Connect to dcrd at localhost using the default port for the specified network.
;dcrdserv=localhost
; Connect using the specified port.
;dcrdserv=localhost:9109

; Specify dcrd's RPC certificate, or disable TLS for the connection
;dcrdcert=/home/me/.dcrd/rpc.cert
;nodaemontls=0

; The interface and protocol used by the web interface an HTTP API.
;apilisten=127.0.0.1:7777
;apiproto=http

; The string to use for JSON indentation when ?indent=true
;indentjson="   "

; Use the RealIP middleware to get the real client IP, but only if a reverse
; proxy or load balancer is correctly setting the X-Forwarded-For and/or
; X-Real-Ip headers. (Default is false.)
;userealip=true

; Sets the max number of blocks behind the best block past which only the syncing
; status page can be served on the running web server when blockchain sync is
; running after dcrdata startup. The maximum value that can be set is 5000. If set
; to more than 5000 or less than 2 syncing status page is loaded by default till
; syncing is done.
; sync-status-limit=1000

; Set "Cache-Control: max-age=X" in HTTP response header for FileServer routes.
;cachecontrol-maxage=86400

; Enable postgresql support, providing more features such as linking outputs to
; spending transactions, and full balance queries. (Default is false.)
;pg=true

; PostgreSQL database config (when pg=true)
; It's possible to have dcrdata switch between databases based on the network
; it's connected to. Create a database for each network you plan to run and set
; pgdbname=dcrdata_{netname}. {netname} will be replaced with the current network
; name (e.g. mainnet, testnet2, simnet).
;pgdbname=dcrdata
;pguser=dcrdata
;pgpass=
; Connect via TCP
;pghost=127.0.0.1:5432
; Connect via UNIX domain socket
;pghost=/run/postgresql

; Enable importing side chain blocks from dcrd on startup. (Default is false.)
;import-side-chains=true
